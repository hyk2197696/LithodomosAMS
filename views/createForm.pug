extends layout

block content


    h1.text-center #{title}

    form(method='POST' action='' enctype='multipart/form-data' onsubmit="return checkRequire();")
        //asset name
        div.form-group
            label(for='asset_name') Asset Name:
            input#asset_name.form-control(type='text', placeholder='Input Asset Name' name='asset_name' required='true'   )

        //project name
        div.form-group.row
            label.col-sm-12(for='project_name') Project Name:
            div#project_div.col-sm-9.container-fluid
                input#project_name.typeahead.col-sm-12.form-control(type='text' ,placeholder='Input Project Name', name='project_name'  )
            div.col-sm-3
                //a(href="/catalog/contentcreate?content_name=project" class="btn btn-default btn-md")
                //    span Create new project

                button.btn.btn-default.btn-md(type='button', data-toggle='modal', data-target='#project_create' )
                    |Create new project
                    // Modal
                #project_create.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true')
                    .modal-dialog
                        .modal-content
                            .modal-header
                                button.close(type='button', data-dismiss='modal', aria-hidden='true')
                                    | ×
                                h4#project_create_label.modal-title.text-center
                                    | Create a new project
                            .modal-body

                                div.form-group
                                    label(for='new_project_name') name:
                                    input#new_project_name.form-control(type='text', placeholder='New project name')

                            .modal-footer
                                button.btn.btn-default(type='button', data-dismiss='modal')
                                    | close
                                button.btn.btn-primary(type='button', onclick ="project_create()") Create
        //Reference
        div.form-group.row
            label.col-sm-12(for='reference') Reference:
            div.col-sm-9
                //input#reference.form-control(type='text' ,data-provide='typeahead', data-items='4'  )
                select#reference.form-control(type='select', placeholder='Select reference' name='reference' required='true' )
                    option#reference_default_option(value= '-1') Please select a reference if there is one

                    for ref in reference_list
                        option(value=ref.id) #{ref.name}
            div.col-sm-3
                button.btn.btn-default.btn-md(type='button', data-toggle='modal', data-target='#reference_create' )
                    | Create new reference
            // Modal
            #reference_create.modal.fade(tabindex='-1', role='dialog', aria-labelledby='reference_create_label', aria-hidden='true')
                .modal-dialog
                    .modal-content
                        .modal-header
                            button.close(type='button', data-dismiss='modal', aria-hidden='true')
                                | ×
                            h4#reference_create_label.modal-title.text-center
                                | Create a new reference
                        .modal-body

                            div.form-group
                                label(for='new_project_name') name:
                                input#new_reference_name.form-control(type='text', placeholder='New reference name')

                        .modal-footer
                            button.btn.btn-default(type='button', data-dismiss='modal')
                                | close
                            button.btn.btn-primary(type='button', onclick ="reference_create()") Create




        //Directory
        div.form-group.row
            label.col-sm-12 Directory:
            div.col-sm-1
                button.btn.btn-default.btn-md(type='button' data-toggle='modal', data-target='#directory_selector' )
                    | choose

                #directory_selector.modal.fade(tabindex='-1', role='dialog', aria-labelledby='myModalLabel', aria-hidden='true')
                    .modal-dialog
                        .modal-content
                            .modal-header
                                button.close(type='button', data-dismiss='modal', aria-hidden='true')
                                    | ×
                                h4#directory_selector_header.modal-title.text-center
                                    | Select a directory
                            #directory_table.modal-body
                                table.table.table-sm.table-dark
                                    tbody#directory_tbody


                            .modal-footer
                                button.btn.btn-default(type='button', data-dismiss='modal')
                                    | close
                                button.btn.btn-primary(type='button', data-toggle='modal',onclick = 'save()') Save

            div.col-sm-11
                .input-group
                    #directory_content.input-group-addon Please choose a folder to save the asset
                    input#directory.form-control(type='hidden', placeholder='Please choose a folder', name='directory', required = 'true' )


        //file upload
        div.form-group
            label Upload asset:
            input.form-control(type='file', name='file_upload', required='true')

        button.btn.btn-secondary(type='submit') Submit
    if errors
        ul
            for error in errors
                li!= error.msg

    script.
        var projects = []
        var references = []
        var allDirectories = []
        var currentDirectory = null
        //load all data before the loading the page
        $(document).ready(function () {

            getAllProject();

            getAllDirectory(function (allDirectory) {
                allDirectories = JSON.parse(allDirectory);
                setDirectoryTableHeader('Root');
                setDirectoryTableBody();
            });

        });


        $(".tt-hint").addClass("form-control");


        //select all project from the database
        function getAllProject() {
            var req = new XMLHttpRequest();

            req.open("GET", "/dynamic/selectallproject");
            req.onreadystatechange = function () {
                if (req.readyState == 4) {
                    //$("#test").html(req.responseText);
                    var responds = JSON.parse(req.responseText);
                    //alert(req.responseText);
                    projects = [];
                    for (i = 0; i < responds.length; i++) {

                        projects.push(responds[i].name);
                    }

                    var project = new Bloodhound({
                        datumTokenizer: Bloodhound.tokenizers.whitespace,
                        queryTokenizer: Bloodhound.tokenizers.whitespace,
                        local: projects
                    });
                    $('#project_div .typeahead').typeahead({
                            hint: true,
                            highlight: true,
                            minLength: 1
                        },
                        {
                            name: 'project',
                            source: project
                        })
                    //$('#project_name').typeahead({source: projects});
                }
            }
            req.send();
        }

        function project_create() {
            if($("#new_project_name").val() == ''){
                alert('Please enter the project name!');
                return;
            }
            var req = new XMLHttpRequest();
            var url = "/catalog/projectcreate?name=" + $("#new_project_name").val();
            req.open("GET",url );
            req.onreadystatechange = function () {
                if (req.readyState == 4) {
                    //alert(req.responseText);
                    alert(req.responseText);
                    $("#project_create").modal('hide');
                    $("#project_name").val($("#new_project_name").val());
                }
            }

            req.send();
        }

        function reference_create() {
            if ($("#new_reference_name").val() == '') {
                alert('Please enter the reference name!');
                return;
            }
            var req = new XMLHttpRequest();
            var url = "/catalog/referencecreate?name=" + $("#new_reference_name").val();
            req.open("GET", url);
            req.onreadystatechange = function () {
                if (req.readyState == 4) {
                    //alert(req.responseText);
                    var response = JSON.parse(req.responseText);
                    alert(response.message);
                    $("#reference_create").modal('hide');
                    $("#reference_default_option").val(response.newReference._id);
                    $("#reference_default_option").html(response.newReference.name);
                    $("#reference").prepend('<option value="-1">No reference</option>')

                }
            }

            req.send();
        }

        //select all reference and form the selection box
        function getallreference() {
            var req = new XMLHttpRequest();
            req.open("GET", "/dynamic/selectallreference");
            req.onreadystatechange = function () {
                if (req.readyState == 4) {
                    references = JSON.parse(req.responseText);
                }
            }
            req.send();
        };

        function getAllDirectory(callback){
            var req = new XMLHttpRequest();
            req.open("GET", "/dynamic/selectalldirectory");
            req.onreadystatechange = function () {
                if (req.readyState == 4) {
                    //alert(req.responseText);

                    callback(req.responseText);

                }
            }

            req.send();
        };

        function getFoldersById(id) {
            var folders = [];

            for(var i = 0; i < allDirectories.length; i++){
                if(allDirectories[i].super == id){
                    folders.push(allDirectories[i]);
                }
            }
            //alert(folders);
            return folders;
        };

        function getSuperFolderIdById(id){
            for(var i = 0; i < allDirectories.length; i++ ){
                if(allDirectories[i]._id == id){
                    return allDirectories[i].super;
                }
            }
        }
        function getFolderObjectById(id){
            for (var i = 0; i < allDirectories.length; i++) {
                if (allDirectories[i]._id == id) {
                    return allDirectories[i]
                }
            }
        }
        function back(id) {
            if (id == null) {
                return;
            }
            currentDirectory = getSuperFolderIdById(id);
            var currentFolderName;
            if(currentDirectory == null){
              currentFolderName = 'Root';
            }else{
                var currentFolder = getFolderObjectById(currentDirectory);
                currentFolderName = currentFolder.name;
            }
            setDirectoryTableHeader(currentFolderName);
            setDirectoryTableBody();

        }

        function explore(id) {
            //alert();
            currentDirectory = id;
            var currentFolder = getFolderObjectById(id);
            setDirectoryTableHeader(currentFolder.name);
            setDirectoryTableBody();
        }

        function setDirectoryTableHeader(name){
            $("#directory_tbody").html('<th scope="row"><botton type="button" class="btn glyphicon glyphicon-arrow-left" onclick="back(\''
                + currentDirectory + '\')"></botton>' +
                '<botton type="button" class="btn-lg glyphicon glyphicon-folder-open" > ' + name + '</botton></th><th scope="row"/>');
        }

        function setDirectoryTableBody() {
            var folders = getFoldersById(currentDirectory);
            for (var i = 0, len = folders.length; i < len; i++) {
                var html = '<tr/><th scope="row"><botton  type="button" class="btn glyphicon glyphicon-folder-close onclick=" onclick="explore(\'' + folders[i]._id + '\')" > ' + folders[i].name + '</botton></th><th scope="row"/>';
                //alert(html);
                $("#directory_tbody").append(html);
            }
        }

        function save(){
            if(currentDirectory == null){
                alert('Can\'t save assets in root directory,\nplease choose another');
                return;
            }
            $("#directory").val(currentDirectory);
            var req = new XMLHttpRequest();
            req.open("GET", "/dynamic/getfullfolderdirectory?id=" + currentDirectory);
            req.onreadystatechange = function () {

                if (req.readyState == 4) {

                    $("#directory_content").html('Root' + req.responseText);
                    $("#directory_selector").modal('hide');
                }
            }
            req.send();
        }

        function checkRequire(){
            if($("#directory").val() == ''){
                alert("please select a directory");
                return false;
            }else{

                return true;
            }
        }

